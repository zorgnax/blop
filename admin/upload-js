#!/usr/bin/perl
use lib "../lib";
use blopcgi js => 1;

$blop->read_conf();

if (!$blop->admin) {
    die "Admin privilege required!\n";
}

my $now = $blop->dbh->quote($blop->now->str);

my $postid = $cgi->param("postid");
my $pageid = $cgi->param("pageid");
my $entry;
if ($postid) {
    $entry = $blop->post(postid => $postid) or die "Invalid postid.\n";
}
elsif ($pageid) {
    $entry = $blop->page(pageid => $pageid) or die "Invalid pageid.\n";
}
elsif (defined $postid) {
    my $sth = $blop->dbh->prepare("insert into posts set added=$now");
    $sth->execute();
    $postid = $sth->{mysql_insertid};
    $entry = bless {postid => $postid}, "Blop::Post";
}
elsif (defined $pageid) {
    my $sth = $blop->dbh->prepare("insert into pages set added=$now");
    $sth->execute();
    $pageid = $sth->{mysql_insertid};
    $entry = bless {pageid => $pageid}, "Blop::Post";
}
else {
    die "An entry is required.\n";
}

my $uploadfh = $cgi->upload("file") or die "Couldn't find upload filehandle.\n";
my $uploadfh2 = $uploadfh->handle;

my $dir = $entry->content_path;
if (!-e $dir) {
    mkdir $dir or die "Unable to mkdir $dir: $!\n";
}

my $name = $cgi->param("file") or die "No file name given.\n";
if ($name =~ m{(^|/)\.\.($|/)}) {
    die "File name can't include \"..\".\n";
}
if ($name =~ m{/}) {
    die "File name can't include \"/\".\n";
}

my $path = "$dir/$name";

# iPhone names all images image.jpg, so don't overwrite each one
if ($name eq "image.jpg" && -e $path) {
    my $i = 2;
    while (1) {
        $name = "image$i.jpg";
        $path = "$dir/$name";
        last if !-e $path;
        $i++;
    }
}

open my $fh, ">", $path or die "Unable to open $path: $!\n";
binmode $fh;
my $buffer;
while ($uploadfh2->read($buffer, 1024)) {
    print $fh $buffer;
}
close $fh;

my $url = $entry->content_url . "/$name";
my $file = {
    name => $name,
    path => $path,
    url => $url,
    fullurl => "$blop->{urlbase}$url",
    size => $blop->human_readable(-s $path),
};
$file->{pageid} = $pageid if $pageid;
$file->{postid} = $postid if $postid;

$entry->update_content(file => $name);

print "Content-Type: application/json\n\n";
print $blop->escape_json($file);

