#!/usr/bin/perl
use lib "../lib";
use blopcgi;
use Blop::GeoIP;

$blop->read_conf();
$blop->require_admin();

my $limit = $cgi->param("limit");
$limit = 100 if !defined $limit;
if ($limit !~ /^\d+$/) {
    die "Invalid limit param.\n";
}

my $offset = $cgi->param("offset");
$offset = 0 if !defined $offset;
if ($offset !~ /^\d+$/) {
    die "Invalid offset param.\n";
}

my @clauses;
my $ipaddr = $cgi->param("ipaddr");
if ($ipaddr) {
    push @clauses, "ipaddr=" . $blop->dbh->quote($ipaddr);
}

my $referer = $cgi->param("referer");
if ($referer) {
    push @clauses, "referer_host=" . $blop->dbh->quote($referer);
}

my $referals = $cgi->param("referals");
if ($referals) {
    push @clauses, "entrance=1 and referer!=\"\"";
}

my $where = "";
if (@clauses) {
    $where = "where " . join(" and ", @clauses);
}

my $sth = $blop->dbh->prepare(<<EOSQL);
select sql_calc_found_rows *
from visits
$where
order by date desc
limit $limit
offset $offset
EOSQL
$sth->execute();

my @visits;
while (my $visit = $sth->fetchrow_hashref()) {
    $visit->{date} = Blop::Date->new($visit->{date});
    if ($visit->{country}) {
        $visit->{country_name} = $Blop::GeoIP::country_map{$visit->{country}};
    }
    push @visits, $visit;
}

$sth = $blop->dbh->prepare("select found_rows()");
$sth->execute();
my ($found_rows) = $sth->fetchrow_array();
my $navigation = Blop::Navigation->new($limit, $offset, $found_rows, "page view");

print $blop->http_header();
print $blop->template("visits.html", visits => \@visits, navigation => $navigation, referer => $referer, ipaddr => $ipaddr, referals => $referals);

