<h1>Python-Markdown</h1>

<p>This is a Python implementation of John Gruber's 
<a href="http://daringfireball.net/projects/markdown/">Markdown</a>.
It is almost completely compliant with the reference implementation,
though there are a few very minor <a href="#differences">differences</a>.
See John's <a href="http://daringfireball.net/projects/markdown/syntax">Syntax
Documentation</a> for the syntax rules.</p>

<p>See the <a href="install.html">installation instructions</a> to get started.</p>

<h2>Goals</h2>

<p>The Python-Markdown project is developed with the following goals in mind:</p>

<ul>
<li><p>Maintain a Python 2 <i>and</i> Python 3 library (with an optional CLI wrapper)
suited to use in web server environments (never raise an exception, never 
write to stdout, etc.) as an implementation
of the markdown parser that follows the <a href="http://daringfireball.net/projects/markdown/syntax">syntax rules</a>
and the behavior of the original (markdown.pl) implementation as reasonably
as possible (see <a href="#differences">differences</a> for a few exceptions).</p></li>
<li><p>Provide an <a href="extensions/api.html">Extension API</a> which makes it possible
to change and/or extend the behavior of the parser.</p></li>
</ul>

<h2>Features</h2>

<p>In addition to the basic markdown syntax, Python-Markdown supports the following
features:</p>

<ul>
<li><p><b>International Input</b></p>

<p>Python-Markdown will accept <a href="reference.html#text">input</a> in any language 
supported by Unicode including bi-directional text. In fact the test suite 
includes documents written in Russian and Arabic.</p></li>
<li><p><b>Extensions</b></p>

<p>Various <a href="extensions/index.html">extensions</a> are provided (including 
<a href="extensions/extra.html">extra</a>) to change and/or extend the base syntax. 
Additionally, a public <a href="extensions/api.html">Extension API</a> is available 
to write your own extensions.</p></li>
<li><p><b>Output Formats</b></p>

<p>Python-Markdown can output documents in HTML4, XHTML and HTML5. See the
<a href="reference.html#output_format">Library Reference</a> for details.</p></li>
<li><p><b>"Safe Mode"</b></p>

<p>When using Python-Markdown to parse input from untrusted users on the web,
the handling of raw HTML can be controlled in various ways to prevent 
harmful code from being injected into your site. See the
<a href="reference.html#safe_mode">Library Reference</a> for details.</p></li>
<li><p><b>Command Line Interface</b></p>

<p>In addition to being a Python Library, a 
<a href="cli.html">command line script</a> is available for your convenience.</p></li>
</ul>

<h2>Differences</h2>

<p>While Python-Markdown strives to fully implement markdown as described in the 
<a href="http://daringfireball.net/projects/markdown/syntax">syntax rules</a>, the rules 
can be interpreted in different ways and different implementations 
occasionally vary in their behavior (see the 
<a href="http://johnmacfarlane.net/babelmark2/faq.html#what-are-some-examples-of-interesting-divergences-between-implementations">Babelmark FAQ</a>
for some examples). Known and intentional differences found in Python-Markdown 
are summarized below:</p>

<ul>
<li><p><b>Middle-Word Emphasis</b></p>

<p>Python-Markdown defaults to ignoring middle-word emphasis. In other words,
<code>some_long_filename.txt</code> will not become <code>some&lt;em&gt;long&lt;/em&gt;filename.txt</code>.
This can be switched off if desired. See the 
<a href="reference.html#smart_emphasis">Library Reference</a> for details.</p></li>
<li><p><b>Indentation/Tab Length</b></p>

<p>The <a href="http://daringfireball.net/projects/markdown/syntax#list">syntax rules</a> 
clearly state that when a list item consists of multiple paragraphs, "each 
subsequent paragraph in a list item <b>must</b> be indented by either 4 spaces 
or one tab" (emphasis added). However, many implementations do not enforce 
this rule and allow less than 4 spaces of indentation. The implementers of 
Python-Markdown consider it a bug to not enforce this rule. </p>

<p>This applies to any block level elements nested in a list, including
paragraphs, sub-lists, blockquotes, code blocks, etc. They <b>must</b> always 
be indented by at least four spaces (or one tab) for each level of nesting.</p>

<p>In the event that one would prefer different behavior,
<a href="reference.html#tab_length">tab_length</a> can be set to whatever length is 
desired. Be warned however, as this will affect indentation for all aspects 
of the syntax (including root level code blocks).</p></li>
<li><p><b>Consecutive Lists</b></p>

<p>While the syntax rules are not clear on this, many implementations
(including the original) do not end one list and start a second
list when the list marker (asterisks, pluses, hyphens, and numbers)
changes. For consistency, Python-Markdown maintains the same behavior
with no plans to change in the foreseeable future. That said,
the <a href="extensions/sane_lists.html">Sane List Extension</a>
is available to provide a less surprising behavior.</p>
</li>
</ul>

<h2>Support</h2>

<p>You may ask for help and discuss various other issues on the <a href="http://lists.sourceforge.net/lists/listinfo/python-markdown-discuss">mailing list</a>
and report bugs on the <a href="http://github.com/waylan/Python-Markdown/issues">bug tracker</a>.</p>

